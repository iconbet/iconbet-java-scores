version = '0.1.0'

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.1'
    //needed to check why this lib is needed
    implementation 'com.github.sink772:javaee-tokens:0.6.2'
    implementation 'com.github.sink772:minimal-json:0.9.7'
    implementation 'com.github.sink772:javaee-scorex:0.5.2'

    testImplementation('org.mockito:mockito-inline:4.6.1')
    testImplementation 'foundation.icon:javaee-unittest:0.9.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	//testImplementation project(':tap-token')
	testImplementation project(':testinteg')
	testImplementation 'foundation.icon:icon-sdk:2.1.0'
	testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
}

optimizedJar {
    mainClassName = 'com.iconbet.score.authorization.Authorization'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        berlin {
            uri = 'https://berlin.net.solidwallet.io/api/v3'
            nid = 0x7
            to = 'cxaf130b98a32736283a5791213054f2e21de61248'
        }
        lisbon {
            uri = 'https://lisbon.net.solidwallet.io/api/v3'
            nid = 0x2
            to = 'cxb107dec5ee860e441dc6d0d59f0c864b904b2c50'
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
}

test {
    useJUnitPlatform()
}

sourceSets {
	integrationTest {
		java.srcDirs = [file('src/intTest/java')]

		compileClasspath += sourceSets.main.output + configurations.testRuntime
		runtimeClasspath += output + compileClasspath
	}
}

configurations {
  integrationTestCompile.extendsFrom testImplementation
  integrationTestRuntime.extendsFrom testRuntime
  integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

//def sampleTokenJar = project(':tap-token').getTasks().getByName('optimizedJar')

task integrationTest(type: Test, dependsOn: optimizedJar) {
	useJUnitPlatform()
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	testLogging.showStandardStreams = true

	// use the common config files
	systemProperty('env.props', new File(project(':testinteg').projectDir, 'conf/env.props'))

	def prefix = 'score.path.'
	systemProperty(prefix + project.name, optimizedJar.outputJarName)
	//systemProperty(prefix + 'tap-token', sampleTokenJar.outputJarName)
}

//integrationTest.dependsOn(sampleTokenJar)
